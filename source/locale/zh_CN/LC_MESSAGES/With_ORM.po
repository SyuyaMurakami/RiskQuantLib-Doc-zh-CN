# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the RiskQuantLib
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: RiskQuantLib \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-10-30 17:22+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../With_ORM.rst:2
msgid "With ORM"
msgstr ""

#: ../With_ORM.rst:7
msgid ""
"For convience, RiskQuantLib provides with functions to interact with ORM."
" However, these functions can be used to any iterable objects. We shall "
"introduce them as follows:"
msgstr ""

#: ../With_ORM.rst:10
msgid "From Iterable"
msgstr ""

#: ../With_ORM.rst:12
msgid ""
"If you use ORM to get a list, whose elements is the record in database "
"and all columns in database are mapped into element attributes, you may "
"want to change this list into RiskQuantLib list."
msgstr ""

#: ../With_ORM.rst:14
msgid ""
"Let's suppose you have a ORM list object ``ORM`` whose element has "
"attributes named: ``OptionCode``, ``PayOff``, ``ExerciseType``, "
"``ExerciseDate``, ``StockPrice``, ``RiskFreeRate``, ``Sigma``."
msgstr ""

#: ../With_ORM.rst:16
msgid "Now we build our project by edit ``config.py`` to: ::"
msgstr ""

#: ../With_ORM.rst:26
msgid ""
"**Noticed here, we have all attribute names that are the same with ORM "
"list element attribute names. This will help RiskQuantLib to identify "
"attribute and set them automatically.**"
msgstr ""

#: ../With_ORM.rst:28
msgid "After building it, you can open the ``main.py`` and use it directly: ::"
msgstr ""

#: ../With_ORM.rst:34
msgid ""
"You can generate RiskQuantLib list from another RiskQuantLib list in this"
" way: ::"
msgstr ""

#: ../With_ORM.rst:40
msgid ""
"Here, if ``subStockList`` is a class inheriting from ``stockList``, all "
"attributes of stockListA will be kept in stockListB. If ``subStockList`` "
"doesn't have any relation with ``stockList``, then only the attributes "
"registered in both classes will be kept."
msgstr ""

