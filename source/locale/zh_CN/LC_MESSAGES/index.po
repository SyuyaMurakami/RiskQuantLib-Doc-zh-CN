# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the RiskQuantLib
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: RiskQuantLib \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-10-30 17:22+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../index.rst:4
msgid "Home page"
msgstr ""

#: ../index.rst:26
msgid "Welcome to Use RiskQuantLib"
msgstr ""

#: ../index.rst:28
msgid ""
"RiskQuantLib is a derivative of Quantlib, a famous quantitative library "
"of financial engineering. Unlike QuantLib, however, RiskQuantLib is a "
"scaffolding of financial analysis. RiskQuantLib provides default class of"
" financial instruments and allows you to create new classes you want "
"automatically, given the inheritance rules and other information. It also"
" provides automation building tools to add attributes to classes "
"automatically."
msgstr ""

#: ../index.rst:31
msgid "Why Should I Use RiskQuantLib?"
msgstr ""

#: ../index.rst:33
msgid ""
"RiskQuantLib provides with convenient way of object oriented coding in "
"fields of finance."
msgstr ""

#: ../index.rst:34
msgid ""
"RiskQuantLib is designed on the base of QuantLib, you can use the "
"functions of QuantLib and combine it with RiskQuantLib easily."
msgstr ""

#: ../index.rst:35
msgid ""
"RiskQuantLib is a scaffolding, which means it creates an independent "
"project for every mission. After creation, RiskQuantLib will be a part of"
" your code. You have full access to your project and can change any "
"source code of RiskQuantLib."
msgstr ""

#: ../index.rst:36
msgid ""
"RiskQuantLib is suitable for applying to different markets, since all "
"financial instruments are defined by your self."
msgstr ""

#: ../index.rst:37
msgid ""
"RiskQuantLib allows you to seperate data analysis process. With "
"RiskQuantLib, data storage, data input, data analysis, data output can be"
" operated independently from each other. You don't have to wait for data "
"input to analysis your data, instead of that, starting coding the "
"analysis logic part before you know the data patterns."
msgstr ""

#: ../index.rst:38
msgid ""
"RiskQuantLib provides template management function. You can code a "
"template of any mission, such as stock return analysis, and save this "
"template into RiskQuantLib, or share it with other users. Next time you "
"meet with a similar data process problem, you can start a new "
"RiskQuantLib project based on this template."
msgstr ""

#: ../index.rst:41
msgid "Who Can Use RiskQuantLib?"
msgstr ""

#: ../index.rst:43
msgid ""
"RiskQuantLib is designed to allow analyst to code easily, it's "
"recommanded to be used by financial analyst, students in business school "
"or quant-traders. It's very useful when dealing with analysis of multiple"
" kinds of financial instruments."
msgstr ""

#: ../index.rst:45
msgid ""
"**Notice: RiskQuantLib is not designed to dealing with heavy data prcoess"
" mission. RiskQuantLib sacrifice memory and speed to accelerate coding.**"
msgstr ""

#: ../index.rst:48
msgid "Slow Start"
msgstr ""

#: ../index.rst:50
msgid ""
"Suppose you are employeed by a bank. One day, your bose calls you to his "
"office, he tells you your company want to invest in a new family fund, "
"Archegos, we suppose it is. Your mission, if you accept, is to tell your "
"boss how risky this deal is."
msgstr ""

#: ../index.rst:52
msgid "`Take adventure after second thought, this is far from recklessness.`"
msgstr ""

#: ../index.rst:54
msgid ""
"After some investigation, you find some data from Bloomberg, however, it "
"only tells you about some stock holdings of the whole fund, like Tencent "
"or Alibaba, etc. The first dataframe you have is like this:"
msgstr ""

#: ../index.rst:57 ../index.rst:103 ../index.rst:117
msgid "Index"
msgstr ""

#: ../index.rst:57
msgid "Holding Mkt Value"
msgstr ""

#: ../index.rst:57
msgid "Stock"
msgstr ""

#: ../index.rst:59 ../index.rst:105 ../index.rst:119
msgid "0"
msgstr ""

#: ../index.rst:59
msgid "239018292"
msgstr ""

#: ../index.rst:59
msgid "TCEHY US Equity"
msgstr ""

#: ../index.rst:61 ../index.rst:107 ../index.rst:121
msgid "1"
msgstr ""

#: ../index.rst:61
msgid "710281723"
msgstr ""

#: ../index.rst:61
msgid "ABC US Equity"
msgstr ""

#: ../index.rst:63 ../index.rst:109
msgid "2"
msgstr ""

#: ../index.rst:63
msgid "7497233"
msgstr ""

#: ../index.rst:63 ../index.rst:73
msgid "HIYJ US Equity"
msgstr ""

#: ../index.rst:65
msgid "3"
msgstr ""

#: ../index.rst:65
msgid "179321234"
msgstr ""

#: ../index.rst:65
msgid "SPACEX US Equity"
msgstr ""

#: ../index.rst:67
msgid "4"
msgstr ""

#: ../index.rst:67
msgid "83249"
msgstr ""

#: ../index.rst:67 ../index.rst:73
msgid "HE US Equity"
msgstr ""

#: ../index.rst:70
msgid ""
"After this, you decided to download the close price of these stocks over "
"past three years, you get your second dataframe like this:"
msgstr ""

#: ../index.rst:73
msgid "Date"
msgstr ""

#: ../index.rst:73
msgid "U7HJ US Equity"
msgstr ""

#: ../index.rst:75
msgid "2020-01-01"
msgstr ""

#: ../index.rst:75
msgid "23.9"
msgstr ""

#: ../index.rst:75 ../index.rst:77
msgid "nan"
msgstr ""

#: ../index.rst:75 ../index.rst:83
msgid "9.8"
msgstr ""

#: ../index.rst:77
msgid "2020-01-02"
msgstr ""

#: ../index.rst:77
msgid "12.8"
msgstr ""

#: ../index.rst:77
msgid "9.5"
msgstr ""

#: ../index.rst:79
msgid "2020-01-03"
msgstr ""

#: ../index.rst:79
msgid "21.9"
msgstr ""

#: ../index.rst:79
msgid "13.1"
msgstr ""

#: ../index.rst:79
msgid "9.3"
msgstr ""

#: ../index.rst:81
msgid "2020-01-04"
msgstr ""

#: ../index.rst:81
msgid "22.1"
msgstr ""

#: ../index.rst:81
msgid "13.2"
msgstr ""

#: ../index.rst:81
msgid "9.7"
msgstr ""

#: ../index.rst:83
msgid "2020-01-05"
msgstr ""

#: ../index.rst:83
msgid "22.4"
msgstr ""

#: ../index.rst:83
msgid "12.9"
msgstr ""

#: ../index.rst:85 ../index.rst:111 ../index.rst:123
msgid "..."
msgstr ""

#: ../index.rst:88
msgid ""
"You decide to calculate the volatility of stocks of Archegos holdings. So"
" you start coding like: ::"
msgstr ""

#: ../index.rst:94
msgid "If you don't use RiskQuantLib, you may do it like: ::"
msgstr ""

#: ../index.rst:100
msgid ""
"Now you are satisfied with what you have done, it seems the risk of "
"stocks can be revealed, at least to some extend. In the afternoon, your "
"boss tells you that he knows Archegos holds two famous fund, called H and"
" JK. He says this is a material non-public information, you may not find "
"net asset value of these two funds by yourself, luckily, your boss has "
"his own way. He gives you the data, which is the third dataframe and it "
"looks like:"
msgstr ""

#: ../index.rst:103
msgid "Net Asset Value"
msgstr ""

#: ../index.rst:103 ../index.rst:117
msgid "Fund"
msgstr ""

#: ../index.rst:105
msgid "2.39"
msgstr ""

#: ../index.rst:105 ../index.rst:119
msgid "H"
msgstr ""

#: ../index.rst:107
msgid "7.22"
msgstr ""

#: ../index.rst:107 ../index.rst:121
msgid "JK"
msgstr ""

#: ../index.rst:109
msgid "0.98"
msgstr ""

#: ../index.rst:109
msgid "UIH"
msgstr ""

#: ../index.rst:114
msgid ""
"Archegos holding shares of these funds are the fourth dataframe, which "
"looks like:"
msgstr ""

#: ../index.rst:117
msgid "Holding Shares"
msgstr ""

#: ../index.rst:119
msgid "20000000"
msgstr ""

#: ../index.rst:121
msgid "45000000"
msgstr ""

#: ../index.rst:126
msgid ""
"Your colleague who used to finish a project, focusing on the historical "
"NAV extreme dropdown of all mutual funds, and he tells you that you can "
"use 1.5% as a one-day 99% VaR. So you calculate risk indicator by: ::"
msgstr ""

#: ../index.rst:136
msgid ""
"Now you have used all kinds of information you can get, since Archegos "
"barely publish their holdings. You give your boss the analysis result and"
" waiting to be praised. However, your boss is pissed off. He takes a long"
" time to calm down and tells you that you forget sever important things:"
msgstr ""

#: ../index.rst:139
msgid ""
"`The price of stock contains nan, you have to deal with it. And don't "
"fill nan with last non-nan value, because this will lead to a smaller std"
" than true value.`"
msgstr ""

#: ../index.rst:140
msgid ""
"`He wants a conclusion of risk of Archegos, not all kinds of risk "
"indicators.`"
msgstr ""

#: ../index.rst:141
msgid ""
"`The stock price you used is wrong, cause it is a divident-included "
"price.`"
msgstr ""

#: ../index.rst:142
msgid ""
"`The only reason Archegos buys these two funds is that Archegos can use "
"it as a bridge to buy more shares of stocks, like TCEHY US Equity, this "
"is a trick to use leverage. So you have to take a closer look, dig down "
"to the holdings of these two funds.`"
msgstr ""

#: ../index.rst:144
msgid ""
"Things get to complicated now. You decide to use RiskQuantLib. First of "
"all, you make a dictionary to hold this analysis project, named "
"'Archegos_Risk'. Then you open a command terminal, and create a "
"RiskQuantLib project by: ::"
msgstr ""

#: ../index.rst:149
msgid "After this, the dictionary looks like ( *In Windows System* ): ::"
msgstr ""

#: ../index.rst:164
msgid "Open ``config.py``, you edit it and make it looks like: ::"
msgstr ""

#: ../index.rst:181
msgid ""
"Notice that you only add two lines after the default config information. "
"You close this file and build this project in command terminal: ::"
msgstr ""

#: ../index.rst:186
msgid ""
"After this, you open ``RiskQuantLib.Instrument.Security.Fund.fund`` to "
"add class function: ::"
msgstr ""

#: ../index.rst:192
msgid ""
"You open ``RiskQuantLib.Instrument.Security.Stock.stock`` to add class "
"function: ::"
msgstr ""

#: ../index.rst:202
msgid "**Notice: All these coding are done before you input your data.**"
msgstr ""

#: ../index.rst:204
msgid ""
"Turn into root path of this project and open ``main.py``, we start "
"analysis: ::"
msgstr ""

#: ../index.rst:235
msgid ""
"Now it's more easy to read and modify, isn't it? You decide to continue "
"and save your result into excel, so you code: ::"
msgstr ""

#: ../index.rst:243
msgid ""
"Till now, the process looks more complicated than a pandas way, however, "
"if you noticed, with RiskQuantLib, data input, data process, data output "
"is independent, change to any of them won't influence the others. Let's "
"take a closer look:"
msgstr ""

#: ../index.rst:246
msgid "*Data Input*:"
msgstr ""

#: ../index.rst:248
msgid "``main.py``: ::"
msgstr ""

#: ../index.rst:275
msgid "*Data Analysis*"
msgstr ""

#: ../index.rst:277
msgid "``RiskQuantLib.Instrument.Security.Fund.fund``: ::"
msgstr ""

#: ../index.rst:283
msgid "``RiskQuantLib.Instrument.Security.Stock.stock`` ::"
msgstr ""

#: ../index.rst:293 ../index.rst:304
msgid "``main.py`` ::"
msgstr ""

#: ../index.rst:302
msgid "*Data Output*"
msgstr ""

#: ../index.rst:312
msgid ""
"After all these are done, you can save this project as a template by "
"using terminal command: ::"
msgstr ""

#: ../index.rst:317
msgid ""
"Next time your boss wants you to analysis another fund, you may start a "
"RiskQuantLib project by calling: ::"
msgstr ""

#: ../index.rst:322
msgid ""
"This is a simple introduction to RiskQuantLib, about how to *start a "
"project*, *start coding with build*, *seperate stages of analysis*, *save"
" project as template* and *use it again*. You may noticed that we have "
"not solved all problems that boss gave to us. More functions can be used "
"to do this. You can refer to RiskQuantLib Class Details for further "
"information."
msgstr ""

