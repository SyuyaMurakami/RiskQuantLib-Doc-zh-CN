# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the RiskQuantLib
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: RiskQuantLib \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-10-30 17:22+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../RiskQuantLib.rst:2
msgid "RiskQuantLib package"
msgstr ""

#: ../RiskQuantLib.rst:5
msgid "Subpackages"
msgstr ""

#: ../RiskQuantLib.rst:20
msgid "Submodules"
msgstr ""

#: ../RiskQuantLib.rst:23
msgid "RiskQuantLib.module module"
msgstr ""

#: ../RiskQuantLib.rst:31
msgid "Module contents"
msgstr ""

#: RiskQuantLib.addProjectTemplate:1 of
msgid ""
"addProjectTemplate() is a function to add a RiskQuantLib project '.zip' "
"file to library."
msgstr ""

#: RiskQuantLib.addProjectTemplate:3 of
msgid ""
"Use terminal command 'addRQL' to use this function. The terminal command "
"'addRQL' accept a parameter 'targetPathString', which is the RiskQuantLib"
" project '.zip' file path that you want to add to library. It have to be "
"a '.zip' file to be added to library."
msgstr ""

#: RiskQuantLib.addProjectTemplate:10 RiskQuantLib.autoBuildProject:12
#: RiskQuantLib.buildProject:14 RiskQuantLib.buildProjectFromConfig:5
#: RiskQuantLib.newProject:10 RiskQuantLib.packProject:10
#: RiskQuantLib.parseBuildPath:5 RiskQuantLib.persistProject:20
#: RiskQuantLib.receiveProjectTemplate:15 RiskQuantLib.saveProject:13
#: RiskQuantLib.sendProjectTemplate:14 RiskQuantLib.unBuildProject:16
#: RiskQuantLib.unpackProject:17 of
msgid "targetPath"
msgstr ""

#: of
msgid "str"
msgstr ""

#: RiskQuantLib.addProjectTemplate:11 of
msgid ""
"A terminal command parameter, specify the RiskQuantLib project '.zip' "
"file path which you want to add to library."
msgstr ""

#: RiskQuantLib.addProjectTemplate:13 RiskQuantLib.delProjectTemplate:11
#: RiskQuantLib.packProject:13 RiskQuantLib.saveProject:16 of
msgid "targetName"
msgstr ""

#: RiskQuantLib.addProjectTemplate:13 of
msgid ""
"The name you want to use to save the .zip file as, it is not necessary to"
" add .zip behind it."
msgstr ""

#: RiskQuantLib.addProjectTemplate:17
#: RiskQuantLib.addProjectTemplateFromGithub:12
#: RiskQuantLib.autoBuildProject:29 RiskQuantLib.buildProject:31
#: RiskQuantLib.buildProjectFromConfig:29
#: RiskQuantLib.clearAllProjectTemplate:8 RiskQuantLib.delProjectTemplate:15
#: RiskQuantLib.listProjectTemplate:7 RiskQuantLib.newProject:14
#: RiskQuantLib.packProject:17 RiskQuantLib.persistProject:30
#: RiskQuantLib.receiveProjectTemplate:19 RiskQuantLib.saveProject:20
#: RiskQuantLib.sendProjectTemplate:18 RiskQuantLib.unBuildProject:20
#: RiskQuantLib.unpackProject:21 of
msgid "None"
msgstr ""

#: RiskQuantLib.addProjectTemplateFromGithub:1 of
msgid ""
"addProjectTemplateFromGithub() is a function to download template from "
"Github to local disk. Use terminal command 'getRQL' to use this function."
" After this function is called, the target repository will be saved as "
"template project."
msgstr ""

#: RiskQuantLib.addProjectTemplateFromGithub:8 of
msgid "targetGithub"
msgstr ""

#: RiskQuantLib.addProjectTemplateFromGithub:8 of
msgid ""
"A terminal command parameter, specify the project name you want to "
"download from Github."
msgstr ""

#: RiskQuantLib.autoBuildProject:1 of
msgid ""
"autoBuildProject() is a function to build RiskQuantLib project. This "
"function keeps running until catch a KeyboardInterrupt Exception."
msgstr ""

#: RiskQuantLib.autoBuildProject:4 of
msgid ""
"Use terminal command 'autoRQL targetProjectPath' to use this function. "
"The project will be built according to the targetProjectPath/config.py in"
" the targetProjectPath."
msgstr ""

#: RiskQuantLib.autoBuildProject:7 of
msgid ""
"After this function is called, the instrument class file and attribute "
"API will be automatically generated and updated."
msgstr ""

#: RiskQuantLib.autoBuildProject:13 RiskQuantLib.buildProject:15 of
msgid ""
"A terminal command parameter, specify the RiskQuantLib project path you "
"want to build and render."
msgstr ""

#: RiskQuantLib.autoBuildProject:14 RiskQuantLib.buildProject:16
#: RiskQuantLib.buildProjectFromConfig:11 RiskQuantLib.persistProject:22 of
msgid "renderFromPath"
msgstr ""

#: RiskQuantLib.autoBuildProject:15 RiskQuantLib.buildProject:17
#: RiskQuantLib.persistProject:23 of
msgid "The path of directory of source file used to render target project."
msgstr ""

#: RiskQuantLib.autoBuildProject:17 RiskQuantLib.buildProject:19
#: RiskQuantLib.persistProject:26 of
msgid "channel"
msgstr ""

#: RiskQuantLib.autoBuildProject:17 RiskQuantLib.buildProject:19
#: RiskQuantLib.persistProject:25 of
msgid ""
"render action in this channel will not delete the result of render in "
"other channel unless it is overwritten by current render."
msgstr ""

#: RiskQuantLib.autoBuildProject:25 RiskQuantLib.buildProject:27
#: RiskQuantLib.buildProjectFromConfig:25 of
msgid "debug"
msgstr ""

#: of
msgid "bool"
msgstr ""

#: RiskQuantLib.autoBuildProject:20 RiskQuantLib.buildProject:22
#: RiskQuantLib.buildProjectFromConfig:20 of
msgid ""
"If false, the break point in Src will not be effective, only break point "
"within instrument class will effect. If true, the class method defined in"
" Src directory will be dynamically bound to instrument node class. Then "
"the program will take .py file under .Src directory as a module and "
"import it, bind the class method into specified class. This mode is "
"useful when your code is still under development. You will not have to "
"change between ./Src/somecode.py and target instrument class .py file to "
"edit any code error. The break point will stop right under "
"./Src/somecode.py."
msgstr ""

#: RiskQuantLib.buildProject:1 of
msgid "buildProject() is a function to build RiskQuantLib project."
msgstr ""

#: RiskQuantLib.buildProject:3 of
msgid ""
"Use terminal command 'bldRQL targetProjectPath' to use this function. The"
" project will be built according to the targetProjectPath/config.py in "
"the targetProjectPath."
msgstr ""

#: RiskQuantLib.buildProject:6 of
msgid ""
"After this function is called, the instrument class file and attribute "
"API will be automatically generated."
msgstr ""

#: RiskQuantLib.buildProject:9 of
msgid ""
"For old version user of RiskQuantLib, this function is totally the same "
"as command 'python build.py' in terminal with working directory as "
"targetProjectPath."
msgstr ""

#: RiskQuantLib.buildProjectFromConfig:1 of
msgid ""
"buildProjectFromConfig() is a function to build project according to "
"config.py declaration."
msgstr ""

#: RiskQuantLib.buildProjectFromConfig:6 RiskQuantLib.parseBuildPath:6 of
msgid "The path of target RiskQuantLib project directory."
msgstr ""

#: RiskQuantLib.buildProjectFromConfig:7 RiskQuantLib.parseBuildPath:18 of
msgid "buildCachePath"
msgstr ""

#: RiskQuantLib.buildProjectFromConfig:8 of
msgid "The path of building cache."
msgstr ""

#: RiskQuantLib.buildProjectFromConfig:9 RiskQuantLib.parseBuildPath:16 of
msgid "configFilePath"
msgstr ""

#: RiskQuantLib.buildProjectFromConfig:10 RiskQuantLib.parseBuildPath:17 of
msgid "The path of config.py used as default build config file."
msgstr ""

#: RiskQuantLib.buildProjectFromConfig:12 of
msgid "The path of source code directory"
msgstr ""

#: RiskQuantLib.buildProjectFromConfig:17 of
msgid "bindType"
msgstr ""

#: RiskQuantLib.buildProjectFromConfig:14 of
msgid ""
"The channel of binding action. Source code are rendered and injected into"
" project by different channels, The source code injected by channel A "
"will be not influenced by source code injected by channel B, unless the "
"content of tag is overwritten by code in channel B. This is used when you"
" have several builders and you want them to build into the same project. "
"In this case, you should give a bindType for each render action to make "
"sure they do not conflict with each other."
msgstr ""

#: RiskQuantLib.checkAndCreateTemplatePath:1 of
msgid ""
"checkAndCreateTemplatePath() is a function to check whether the Template "
"path exists."
msgstr ""

#: RiskQuantLib.checkAndCreateTemplatePath:5 of
msgid "sourcePath"
msgstr ""

#: RiskQuantLib.checkAndCreateTemplatePath:6 of
msgid "The path of RiskQuantLib template directory."
msgstr ""

#: RiskQuantLib.clearAllProjectTemplate:1 of
msgid ""
"clearAllProjectTemplate() is a function to delete all RiskQuantLib "
"projects from library."
msgstr ""

#: RiskQuantLib.clearAllProjectTemplate:3 of
msgid ""
"Use terminal command 'clearRQL' to use this function. After calling this "
"function, all existing RiskQuantLib projects will be removed."
msgstr ""

#: RiskQuantLib.delProjectTemplate:1 of
msgid "delProject() is a function to delete a RiskQuantLib project from library."
msgstr ""

#: RiskQuantLib.delProjectTemplate:3 of
msgid ""
"Use terminal command 'delRQL' to use this function. The terminal command "
"'delRQL' accept a parameter 'projectName', which is the project name you "
"want to delete from library. After calling this function, the existing "
"RiskQuantLib project will be removed from library."
msgstr ""

#: RiskQuantLib.delProjectTemplate:11 of
msgid ""
"A terminal command parameter, specify the project name you want to delete"
" from library."
msgstr ""

#: RiskQuantLib.initiateBuildFile:1 of
msgid ""
"initiateBuildFile() is a function to generate content of build.py source "
"file."
msgstr ""

#: RiskQuantLib.initiateBuildFile:3 of
msgid ""
"build.py will be created in every RiskQuantLib project when initiating "
"it. It is the entrance of build and render action. Users can either call "
"'python build.py' directly or add some parameter from command line."
msgstr ""

#: RiskQuantLib.initiateBuildFile:9 RiskQuantLib.initiateConfigFile:9
#: RiskQuantLib.initiateExecutableBuildShortcutFile:8
#: RiskQuantLib.initiateExecutableDebugShortcutFile:8
#: RiskQuantLib.initiateMainFile:8 of
msgid "PYB : pythonScriptBuilder"
msgstr ""

#: RiskQuantLib.initiateConfigFile:1 of
msgid ""
"initiateConfigFile() is a function to generate content of config.py "
"source file."
msgstr ""

#: RiskQuantLib.initiateConfigFile:3 of
msgid ""
"config.py will be created in every RiskQuantLib project when initiating "
"it. It is the declaration file of all instruments to be used in project "
"and their inheritance relationship, it also contains the attribute the "
"would be used in this project."
msgstr ""

#: RiskQuantLib.initiateExecutableBuildShortcutFile:1 of
msgid ""
"initiateExecutableBuildShortcutFile() is a function to generate "
"executable shortcut for different system."
msgstr ""

#: RiskQuantLib.initiateExecutableBuildShortcutFile:3 of
msgid ""
"build.bat or build.sh will be created in every RiskQuantLib project when "
"initiating it on Windows or linux. It is the shortcut of run build.py by "
"console."
msgstr ""

#: RiskQuantLib.initiateExecutableDebugShortcutFile:1 of
msgid ""
"initiateExecutableDebugShortcutFile() is a function to generate "
"executable shortcut for different system."
msgstr ""

#: RiskQuantLib.initiateExecutableDebugShortcutFile:3 of
msgid ""
"debug.bat or debug.sh will be created in every RiskQuantLib project when "
"initiating it on Windows or linux. It is the shortcut of run build.py by "
"console."
msgstr ""

#: RiskQuantLib.initiateMainFile:1 of
msgid ""
"initiateMainFile() is a function to generate content of main.py source "
"file."
msgstr ""

#: RiskQuantLib.initiateMainFile:3 of
msgid ""
"main.py will be created in every RiskQuantLib project when initiating it."
" It is the entrance of all project. Users should call 'python main.py' to"
" run the project."
msgstr ""

#: RiskQuantLib.listProjectTemplate:1 of
msgid ""
"listProjectTemplate() is a function to show all RiskQuantLib projects "
"from library."
msgstr ""

#: RiskQuantLib.listProjectTemplate:3 of
msgid "Use terminal command 'listRQL' to use this function."
msgstr ""

#: RiskQuantLib.newProject:1 of
msgid "newProject() is a function to create a new RiskQuantLib project."
msgstr ""

#: RiskQuantLib.newProject:3 of
msgid ""
"Use terminal command 'newRQL' to use this function. The terminal command "
"'newRQL' accept a parameter 'targetPathString', which is the path that "
"you want to build RiskQuantLib project. If there is already a "
"RiskQuantLib project in target path, it will be deleted and replaced by a"
" new project."
msgstr ""

#: RiskQuantLib.newProject:10 of
msgid ""
"A terminal command parameter, specify the path where you want to build a "
"new project."
msgstr ""

#: RiskQuantLib.packProject:1 of
msgid ""
"packProject() is a function to pack a RiskQuantLib project into '.zip' "
"file."
msgstr ""

#: RiskQuantLib.packProject:3 of
msgid ""
"Use terminal command 'pkgRQL' to use this function. The terminal command "
"'pkgRQL' accept a parameter 'targetPathString', which is the RiskQuantLib"
" project path that you want to package. It doesn't need to have a "
"directory named 'RiskQuantLib' to be packaged."
msgstr ""

#: RiskQuantLib.packProject:11 of
msgid ""
"A terminal command parameter, specify the RiskQuantLib project path which"
" you want to package."
msgstr ""

#: RiskQuantLib.packProject:13 of
msgid ""
"A terminal command parameter, specify the name you want to mark the "
"project zip file with."
msgstr ""

#: RiskQuantLib.parseBuildPath:1 of
msgid ""
"parseBuildPath() is a function to generate the paths of project related "
"file."
msgstr ""

#: RiskQuantLib.parseBuildPath:10 of
msgid "checkExist"
msgstr ""

#: RiskQuantLib.parseBuildPath:8 of
msgid ""
"If true, this function will check the existence of related path of target"
" project. It will raise exception iin case of absence."
msgstr ""

#: RiskQuantLib.parseBuildPath:14 of
msgid "rqlPath"
msgstr ""

#: RiskQuantLib.parseBuildPath:15 of
msgid "the path of RiskQuantLib directory"
msgstr ""

#: RiskQuantLib.parseBuildPath:19 of
msgid "the path of building cache"
msgstr ""

#: RiskQuantLib.persistProject:1 of
msgid "persistProject() is a function to persist RiskQuantLib project."
msgstr ""

#: RiskQuantLib.persistProject:3 of
msgid ""
"Use terminal command 'pstRQL targetProjectPath' to use this function. The"
" project will be changed into a permanent project, where all current "
"attribute APIs and instrument registrations will not be influenced by "
"build.py anymore."
msgstr ""

#: RiskQuantLib.persistProject:7 of
msgid ""
"This function is like a snapshot of your project, it freezes all "
"effective APIs into permanent ones."
msgstr ""

#: RiskQuantLib.persistProject:9 of
msgid ""
"Surely, you can still build the persisted project with new config.py "
"file. Just remember, no matter how many times you build it, the persisted"
" API will remain effective and will not be influenced."
msgstr ""

#: RiskQuantLib.persistProject:12 of
msgid ""
"This command is used when you want to distribute your project to someone "
"else, but you do not want him to change your current API. Or this command"
" is used when you are quite sure your current code is stable and can be "
"settled down so that you can move on to next stage."
msgstr ""

#: RiskQuantLib.persistProject:16 of
msgid "This command can not be cancelled or un-done, use it carefully."
msgstr ""

#: RiskQuantLib.persistProject:21 of
msgid ""
"A terminal command parameter, specify the RiskQuantLib project path you "
"want to persist."
msgstr ""

#: RiskQuantLib.receiveProjectTemplate:1 of
msgid ""
"receiveProjectTemplate() is a function to receive any file or directory "
"from your friend by LOCAL AREA NETWORK (LAN)."
msgstr ""

#: RiskQuantLib.receiveProjectTemplate:4 of
msgid ""
"Use terminal command 'recvRQL' to use this function. You can also specify"
" a path where your want to save the shared file or directory, like "
"'recvRQL targetPath'. If you do not give a path, the file will be stored "
"in current working directory."
msgstr ""

#: RiskQuantLib.receiveProjectTemplate:8 of
msgid ""
"After this function is called, you can receive the file shared from your "
"friend, who is also in the same LAN. You can not receive files or project"
" from people outside your local network by this function. If you want to "
"share with friends who is across ocean, maybe you should use Github and "
"getRQL command."
msgstr ""

#: RiskQuantLib.receiveProjectTemplate:15 of
msgid ""
"A terminal command parameter, specify the path where you want to hold the"
" received file."
msgstr ""

#: RiskQuantLib.saveProject:1 of
msgid ""
"saveProject() is a function to save a RiskQuantLib project and add it to "
"library."
msgstr ""

#: RiskQuantLib.saveProject:3 of
msgid ""
"Use terminal command 'saveRQL' to use this function. The terminal command"
" 'saveRQL' accept a parameter 'targetPathString', which is the "
"RiskQuantLib project path that you want to save, and an optional "
"parameter 'projectName', which is the name you want to give to this "
"project. After calling this function, a '.zip' file will be created in "
"RiskQuantLib project directory, and this project will be stored as a "
"template."
msgstr ""

#: RiskQuantLib.saveProject:14 of
msgid ""
"A terminal command parameter, specify the RiskQuantLib project path which"
" you want to save as template."
msgstr ""

#: RiskQuantLib.saveProject:16 of
msgid ""
"A terminal command parameter, specify the name you want to save this "
"project as."
msgstr ""

#: RiskQuantLib.sendProjectTemplate:1 of
msgid ""
"sendProjectTemplate() is a function to send any file or directory to your"
" friend by LOCAL AREA NETWORK (LAN)."
msgstr ""

#: RiskQuantLib.sendProjectTemplate:4 of
msgid ""
"Use terminal command 'sendRQL targetProjectPath' or 'sendRQL "
"targetFilePath' to use this function. If you send a directory, it will be"
" packed into a zip file at first, and sent to your friend."
msgstr ""

#: RiskQuantLib.sendProjectTemplate:7 of
msgid ""
"After this function is called, you can send to your friend who is also in"
" the same LAN. You can not send files or project to people outside your "
"local network by this function. If you want to share with friends who is "
"across ocean, maybe you should use Github and getRQL command."
msgstr ""

#: RiskQuantLib.sendProjectTemplate:14 of
msgid ""
"A terminal command parameter, specify the path of file or directory you "
"want to send."
msgstr ""

#: RiskQuantLib.unBuildProject:1 of
msgid "unBuildProject() is a function to un-build RiskQuantLib project."
msgstr ""

#: RiskQuantLib.unBuildProject:3 of
msgid ""
"Use terminal command 'ubldRQL targetProjectPath' to use this function. "
"The project will be un-built and return to the initial status."
msgstr ""

#: RiskQuantLib.unBuildProject:6 of
msgid ""
"After this function is called, the attribute API will be automatically "
"removed, any all registration of instrument will be deleted. But, python "
"source file will not be deleted until you do it by yourself."
msgstr ""

#: RiskQuantLib.unBuildProject:9 of
msgid ""
"After a project is un-built, you can not use instrument directly in "
"main.py or create new instrument inherited from those un-registered "
"instrument. The file config.py will not be changed after you call this "
"function."
msgstr ""

#: RiskQuantLib.unBuildProject:16 of
msgid ""
"A terminal command parameter, specify the RiskQuantLib project path you "
"want to un-build and un-render."
msgstr ""

#: RiskQuantLib.unpackProject:1 of
msgid ""
"unpackProject() is a function to unpack a RiskQuantLib project from "
"library and use it again."
msgstr ""

#: RiskQuantLib.unpackProject:3 of
msgid ""
"Use terminal command 'tplRQL' to use this function. The terminal command "
"'tplRQL' accept a parameter 'projectName', which is the project name you "
"want to unpack from library. and a parameter 'targetPathString', which is"
" the path where you want to unpack RiskQuantLib project, After calling "
"this function, the content of existing RiskQuantLib project will be "
"unpacked to the location you choose, and you can start a project at the "
"fundation of this unpakced project."
msgstr ""

#: RiskQuantLib.unpackProject:14 of
msgid "templateName"
msgstr ""

#: RiskQuantLib.unpackProject:14 of
msgid ""
"A terminal command parameter, specify the project name you want to unpack"
" from library."
msgstr ""

#: RiskQuantLib.unpackProject:17 of
msgid ""
"A terminal command parameter, specify the path where you want to unpack "
"RiskQuantLib project."
msgstr ""

